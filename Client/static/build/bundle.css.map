{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Pagination.svelte",
    "..\\..\\Row.svelte",
    "..\\..\\Search.svelte",
    "..\\..\\Sort.svelte",
    "..\\..\\index.svelte",
    "..\\..\\Splash.svelte"
  ],
  "sourcesContent": [
    "<script context=\"module\">\r\n  let globalLabels;\r\n\r\n  export function setLabels(labels) {\r\n    globalLabels = labels;\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { createEventDispatcher, getContext } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n  const stateContext = getContext(\"state\");\r\n\r\n  export let buttons = [-2, -1, 0, 1, 2];\r\n  export let count;\r\n  export let page = 0;\r\n  export let pageSize;\r\n  export let serverSide = false;\r\n\r\n  export let labels = {\r\n    first: \"First\",\r\n    last: \"Last\",\r\n    next: \"Next\",\r\n    previous: \"Previous\",\r\n    ...globalLabels\r\n  };\r\n\r\n  $: pageCount = Math.floor(count / pageSize);\r\n\r\n  function onChange(event, page) {\r\n    const state = stateContext.getState();\r\n    const detail = {\r\n      originalEvent: event,\r\n      page,\r\n      pageIndex: serverSide ? 0 : page * state.pageSize,\r\n      pageSize: state.pageSize\r\n    };\r\n    dispatch(\"pageChange\", detail);\r\n\r\n    if (detail.preventDefault !== true) {\r\n      stateContext.setPage(detail.page, detail.pageIndex);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .active {\r\n    background-color: rgb(150, 150, 235);\r\n    color: white;\r\n  }\r\n\r\n  ul {\r\n    flex: 1;\r\n    float: right;\r\n    list-style: none;\r\n  }\r\n\r\n  li {\r\n    float: left;\r\n  }\r\n\r\n  button {\r\n    background: transparent;\r\n    border: 1px solid #ccc;\r\n    padding: 5px 10px;\r\n    margin-left: 3px;\r\n    float: left;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n\r\n<ul>\r\n  <li>\r\n    <button disabled={page === 0} on:click={e => onChange(e, 0)}>\r\n      {labels.first}\r\n    </button>\r\n  </li>\r\n  <li>\r\n    <button disabled={page === 0} on:click={e => onChange(e, page - 1)}>\r\n      {labels.previous}\r\n    </button>\r\n  </li>\r\n  {#each buttons as button}\r\n    {#if page + button >= 0 && page + button <= pageCount}\r\n      <li>\r\n        <button\r\n          class:active={page === page + button}\r\n          on:click={e => onChange(e, page + button)}>\r\n          {page + button + 1}\r\n        </button>\r\n      </li>\r\n    {/if}\r\n  {/each}\r\n  <li>\r\n    <button\r\n      disabled={page > pageCount - 1}\r\n      on:click={e => onChange(e, page + 1)}>\r\n      {labels.next}\r\n    </button>\r\n  </li>\r\n  <li>\r\n    <button disabled={page >= pageCount} on:click={e => onChange(e, pageCount)}>\r\n      {labels.last}\r\n    </button>\r\n  </li>\r\n</ul>\r\n",
    "<script>\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let index = 0;\r\n\r\n  function onClick(event) {\r\n    dispatch(\"click\", event);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .odd {\r\n    background-color: #f7f7f7;\r\n  }\r\n</style>\r\n\r\n<tr\r\n  on:click={onClick}\r\n  class={$$props.class}\r\n  class:odd={index % 2 !== 0}\r\n  class:even={index % 2 === 0}>\r\n  <slot />\r\n</tr>\r\n",
    "<script context=\"module\">\r\n  let globalLabels;\r\n\r\n  export function setLabels(labels) {\r\n    globalLabels = labels;\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { createEventDispatcher, getContext } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n  const stateContext = getContext(\"state\");\r\n\r\n  export let filter = (row, text, index) => {\r\n    text = text.toLowerCase();\r\n    for (let i in row) {\r\n      if (\r\n        (row[i] || \"\")\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(text) > -1\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  export let index = -1;\r\n  export let text = \"\";\r\n\r\n  export let labels = {\r\n    placeholder: \"Search\",\r\n    ...globalLabels\r\n  };\r\n\r\n  async function onSearch(event) {\r\n    const state = stateContext.getState();\r\n    const detail = {\r\n      originalEvent: event,\r\n      filter,\r\n      index,\r\n      text,\r\n      page: state.page,\r\n      pageIndex: state.pageIndex,\r\n      pageSize: state.pageSize,\r\n      rows: state.filteredRows\r\n    };\r\n    dispatch(\"search\", detail);\r\n\r\n    if (detail.preventDefault !== true) {\r\n      if (detail.text.length === 0) {\r\n        stateContext.setRows(state.rows);\r\n      } else {\r\n        stateContext.setRows(\r\n          detail.rows.filter(r => detail.filter(r, detail.text, index))\r\n        );\r\n      }\r\n      stateContext.setPage(0, 0);\r\n    } else {\r\n      stateContext.setRows(detail.rows);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .search {\r\n    width: 33.3%;\r\n    float: right;\r\n  }\r\n  .search input {\r\n    width: 100%;\r\n    border: 1px solid #eee;\r\n    border-radius: 3px;\r\n    padding: 5px 3px;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    .search {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"search\">\r\n  <input\r\n    type=\"search\"\r\n    title={labels.placeholder}\r\n    placeholder={labels.placeholder}\r\n    bind:value={text}\r\n    on:keyup={onSearch} />\r\n</div>\r\n",
    "<script context=\"module\">\r\n  let globalLabels;\r\n\r\n  export function setLabels(labels) {\r\n    globalLabels = labels;\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { createEventDispatcher, getContext } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n  const stateContext = getContext(\"state\");\r\n\r\n  export let dir = \"none\";\r\n  export let key;\r\n  export let labels = {\r\n    asc: { title: \"Ascending\", html: \"&#8593;\" },\r\n    desc: { title: \"Desceding\", html: \"&#8595;\" },\r\n    unsorted: { title: \"Unsorted\", html: \"&#8645;\" },\r\n    ...globalLabels\r\n  };\r\n\r\n  function onClick(event) {\r\n    const state = stateContext.getState();\r\n    let rows;\r\n\r\n    const detail = {\r\n      originalEvent: event,\r\n      key,\r\n      dir: dir !== \"desc\" ? \"desc\" : \"asc\",\r\n      rows: state.filteredRows\r\n    };\r\n\r\n    dispatch(\"sort\", detail);\r\n\r\n    if (detail.preventDefault !== true) {\r\n      dir = detail.dir;\r\n    }\r\n    stateContext.setRows(detail.rows);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .sort {\r\n    right: 0;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    padding: 0 0.25em;\r\n    color: #999;\r\n  }\r\n</style>\r\n\r\n<span class=\"sort\" on:click={onClick}>\r\n  {#if dir === 'asc'}\r\n    <span title={labels.asc.title}>\r\n      {@html labels.asc.html}\r\n    </span>\r\n  {:else if dir === 'desc'}\r\n    <span title={labels.desc.title}>\r\n      {@html labels.desc.html}\r\n    </span>\r\n  {:else}\r\n    <span title={labels.unsorted.title}>\r\n      {@html labels.unsorted.html}\r\n    </span>\r\n  {/if}\r\n</span>\r\n",
    "<script context=\"module\">\r\n  import Pagination, {\r\n    setLabels as _setPaginationLabels\r\n  } from \"./Pagination.svelte\";\r\n  import Row from \"./Row.svelte\";\r\n  import Search, { setLabels as _setSearchLabels } from \"./Search.svelte\";\r\n  import Sort, { setLabels as _setSortLabels } from \"./Sort.svelte\";\r\n  export { Pagination, Row, Search, Sort };\r\n\r\n  let globalLabels;\r\n\r\n  export function setTableLabels(labels) {\r\n    globalLabels = labels;\r\n  }\r\n\r\n  export const setPaginationLabels = _setPaginationLabels;\r\n  export const setSearchLabels = _setSearchLabels;\r\n  export const setSortLabels = _setSortLabels;\r\n</script>\r\n\r\n<script>\r\n  import { createEventDispatcher, setContext } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let loading = false;\r\n  export let page = 0;\r\n  export let pageIndex = 0;\r\n  export let pageSize = 10;\r\n  export let responsive = true;\r\n  export let rows;\r\n  export let serverSide = false;\r\n  export let labels = {\r\n    empty: \"No records available\",\r\n    loading: \"Loading data\",\r\n    ...globalLabels\r\n  };\r\n\r\n  let buttons = [-2, -1, 0, 1, 2];\r\n  let pageCount = 0;\r\n\r\n  $: filteredRows = rows;\r\n  $: visibleRows = filteredRows.slice(pageIndex, pageIndex + pageSize);\r\n\r\n  setContext(\"state\", {\r\n    getState: () => ({\r\n      page,\r\n      pageIndex,\r\n      pageSize,\r\n      rows,\r\n      filteredRows\r\n    }),\r\n    setPage: (_page, _pageIndex) => {\r\n      page = _page;\r\n      pageIndex = _pageIndex;\r\n    },\r\n    setRows: _rows => (filteredRows = _rows)\r\n  });\r\n\r\n  function onPageChange(event) {\r\n    dispatch(\"pageChange\", event.detail);\r\n  }\r\n\r\n  function onSearch(event) {\r\n    dispatch(\"search\", event.detail);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n\r\n  .table :global(th, td) {\r\n    position: relative;\r\n  }\r\n\r\n  .table :global(td) {\r\n    padding: 0.3em 0.3em;\r\n  }\r\n\r\n  .center {\r\n    text-align: center;\r\n    font-style: italic;\r\n  }\r\n\r\n  .center > span {\r\n    padding: 10px 10px;\r\n    float: left;\r\n    width: 100%;\r\n  }\r\n\r\n  .slot-top,\r\n  .slot-bottom {\r\n    float: left;\r\n    width: 100%;\r\n    margin-top: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    table.responsive {\r\n      border: 0;\r\n    }\r\n\r\n    table.responsive :global(thead) {\r\n      border: none;\r\n      clip: rect(0 0 0 0);\r\n      height: 1px;\r\n      margin: -1px;\r\n      overflow: hidden;\r\n      padding: 0;\r\n      position: absolute;\r\n      width: 1px;\r\n    }\r\n\r\n    table.responsive :global(tr) {\r\n      border-bottom: 2px solid #ddd;\r\n      display: block;\r\n      padding-bottom: 0.3em;\r\n      margin-bottom: 0.3em;\r\n    }\r\n\r\n    table.responsive :global(td) {\r\n      border-bottom: 1px solid #ddd;\r\n      display: block;\r\n      font-size: 0.8em;\r\n      text-align: right;\r\n    }\r\n\r\n    table.responsive :global(td::before) {\r\n      /*\r\n\t* aria-label has no advantage, it won't be read inside a table content: attr(aria-label);\r\n\t*/\r\n      content: attr(data-label);\r\n      float: left;\r\n      font-weight: bold;\r\n    }\r\n\r\n    table.responsive :global(td[data-label-normal]::before) {\r\n      font-weight: normal;\r\n    }\r\n\r\n    table.responsive :global(td[data-label-upper]::before) {\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    table.responsive :global(td:last-child) {\r\n      border-bottom: 0;\r\n    }\r\n  }\r\n</style>\r\n\r\n<slot name=\"top\">\r\n  <div class=\"slot-top\">\r\n    <svelte:component this={Search} on:search={onSearch} />\r\n  </div>\r\n</slot>\r\n\r\n<table class={'table ' + $$props.class} class:responsive>\r\n  <slot name=\"head\" />\r\n  {#if loading}\r\n    <tbody>\r\n      <tr>\r\n        <td class=\"center\" colspan=\"100%\">\r\n          <span>\r\n            {@html labels.loading}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  {:else if visibleRows.length === 0}\r\n    <tbody>\r\n      <tr>\r\n        <td class=\"center\" colspan=\"100%\">\r\n          <span>\r\n            {@html labels.empty}\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  {:else}\r\n    <slot rows={visibleRows} />\r\n  {/if}\r\n  <slot name=\"foot\" />\r\n</table>\r\n\r\n<slot name=\"bottom\">\r\n  <div class=\"slot-bottom\">\r\n    <svelte:component\r\n      this={Pagination}\r\n      {page}\r\n      {pageSize}\r\n      {serverSide}\r\n      count={filteredRows.length - 1}\r\n      on:pageChange={onPageChange} />\r\n  </div>\r\n</slot>\r\n",
    "<script>\n  import { draw } from 'svelte/transition'\n  let duration = 2000\n  let drawing = true\n  let show = false\n  let error = false\n  setTimeout(() => (show = true))\n  setTimeout(() => (drawing = false), 1800)\n  setTimeout(() => (error = true), 10000)\n</script>\n\n<style>\n  .container {\n    text-align: center;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    margin: 0;\n  }\n  .error {min-height: 100px}\n  .svg {\n    width: 200px;\n    margin: auto;\n  }\n  path {\n    transition: 0.3s ease;\n    stroke-width: 1;\n    stroke: black;\n    stroke-width: 0;\n  }\n  .svg.drawing path {\n    stroke-width: 2;\n    fill-opacity: 0;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"svg\" class:drawing>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      style=\"isolation:isolate\"\n      viewBox=\"0 0 1000 1000\">\n      <defs>\n        <clipPath id=\"_clipPath_40vHZL606H8eXCPAFONHYpjfq1ISybTL\">\n          <rect width=\"1000\" height=\"1000\" />\n        </clipPath>\n      </defs>\n      <g clip-path=\"url(#_clipPath_40vHZL606H8eXCPAFONHYpjfq1ISybTL)\">\n        <linearGradient\n          id=\"_lgradient_2\"\n          x1=\"-0.011142038971568513\"\n          y1=\"-0.011791871475954507\"\n          x2=\"0.9938039543302696\"\n          y2=\"0.9909604299907665\"\n          gradientTransform=\"matrix(532,0,0,368.749,249,625.251)\"\n          gradientUnits=\"userSpaceOnUse\">\n          <stop\n            offset=\"1.7391304347826086%\"\n            stop-opacity=\"1\"\n            style=\"stop-color:rgb(255,124,247)\" />\n          <stop\n            offset=\"100%\"\n            stop-opacity=\"1\"\n            style=\"stop-color:rgb(255,203,252)\" />\n        </linearGradient>\n        {#if show}\n          <path\n            transition:draw|local={{ duration }}\n            d=\" M 564.251 625.251 L 659 720 L 700 675 L 781 994 L 457 921 L 506\n            873 L 249 626 L 249 626 L 542.5 626 C 549.812 626 557.065 625.748\n            564.251 625.251 Z \"\n            fill=\"url(#_lgradient_2)\" />\n          <linearGradient\n            id=\"_lgradient_3\"\n            x1=\"0.13056277056277052\"\n            y1=\"0.05232744783306609\"\n            x2=\"0.9350649350649348\"\n            y2=\"0.7710005350454795\"\n            gradientTransform=\"matrix(770,0,0,623,84,3)\"\n            gradientUnits=\"userSpaceOnUse\">\n            <stop\n              offset=\"2.1739130434782608%\"\n              stop-opacity=\"1\"\n              style=\"stop-color:rgb(241,93,232)\" />\n            <stop\n              offset=\"100%\"\n              stop-opacity=\"1\"\n              style=\"stop-color:rgb(184,58,177)\" />\n          </linearGradient>\n          <path\n            transition:draw|local={{ duration }}\n            d=\" M 542.5 215.388 L 84 215.388 L 203 3 L 542.5 3 L 542.5 3 C\n            714.422 3 854 142.578 854 314.5 C 854 486.422 714.422 626 542.5 626\n            L 249 626 L 364 413.612 L 542.5 413.612 L 542.5 413.612 C 597.201\n            413.612 641.612 369.201 641.612 314.5 C 641.612 259.799 597.201\n            215.388 542.5 215.388 L 542.5 215.388 L 542.5 215.388 Z \"\n            fill=\"url(#_lgradient_3)\" />\n        {/if}\n      </g>\n    </svg>\n  </div>\n  <h1 style=\"\">Generating routes...</h1>\n  <div class=\"error\">\n    {#if error}\n      <h3>Your app should probably have loaded by now</h3>\n    {/if}\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}