// <auto-generated />
using System;
using ControleSocial.Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleSocial.Domain.Migrations.DWControleSocial
{
	[DbContext(typeof(DWControleSocialContext))]
	[Migration("20200610190256_Initial")]
	partial class Initial
	{
		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
					.HasAnnotation("ProductVersion", "3.1.4")
					.HasAnnotation("Relational:MaxIdentifierLength", 128)
					.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoDespesaDotacaoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCategoria")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(8)")
											.HasMaxLength(8)
											.IsUnicode(true);

						b.Property<string>("CodigoElemento")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoGrupo")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoModalidade")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoSubElemento")
											.HasColumnType("nvarchar(max)");

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeCategoria")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeElemento")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeGrupo")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeModalidade")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeSubElemento")
											.HasColumnType("nvarchar(max)");

						b.HasKey("Id");

						b.HasIndex("CodigoCategoria", "CodigoElemento", "CodigoGrupo", "CodigoModalidade", "NomeCategoria", "NomeElemento", "NomeGrupo", "NomeModalidade")
											.IsUnique()
											.HasFilter("[CodigoCategoria] IS NOT NULL AND [CodigoElemento] IS NOT NULL AND [CodigoGrupo] IS NOT NULL AND [CodigoModalidade] IS NOT NULL AND [NomeCategoria] IS NOT NULL AND [NomeElemento] IS NOT NULL AND [NomeGrupo] IS NOT NULL AND [NomeModalidade] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoDespesaDotacaoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoDespesaDotacaoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCategoria")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(8)")
											.HasMaxLength(8)
											.IsUnicode(true);

						b.Property<string>("CodigoElemento")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoGrupo")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoModalidade")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoSubElemento")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeCategoria")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeElemento")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeGrupo")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeModalidade")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeSubElemento")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoCategoria", "CodigoElemento", "CodigoGrupo", "CodigoModalidade", "CodigoSubElemento", "NomeCategoria", "NomeElemento", "NomeGrupo", "NomeModalidade", "NomeSubElemento")
											.IsUnique()
											.HasFilter("[CodigoCategoria] IS NOT NULL AND [CodigoElemento] IS NOT NULL AND [CodigoGrupo] IS NOT NULL AND [CodigoModalidade] IS NOT NULL AND [CodigoSubElemento] IS NOT NULL AND [NomeCategoria] IS NOT NULL AND [NomeElemento] IS NOT NULL AND [NomeGrupo] IS NOT NULL AND [NomeModalidade] IS NOT NULL AND [NomeSubElemento] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoDespesaDotacaoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFonteERecursoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(15)")
											.HasMaxLength(15)
											.IsUnicode(true);

						b.Property<string>("CodigoDetalhamento")
											.HasColumnType("nvarchar(7)")
											.HasMaxLength(7)
											.IsUnicode(true);

						b.Property<string>("CodigoFonteReduzida")
											.HasColumnType("nvarchar(7)")
											.HasMaxLength(7)
											.IsUnicode(true);

						b.Property<string>("CodigoGrupo")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeDetalhamento")
											.HasColumnType("nvarchar(250)")
											.HasMaxLength(250)
											.IsUnicode(true);

						b.Property<string>("NomeFonteReduzida")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeGrupo")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoDetalhamento", "CodigoFonteReduzida", "CodigoGrupo", "NomeDetalhamento", "NomeFonteReduzida", "NomeGrupo")
											.IsUnique()
											.HasFilter("[CodigoDetalhamento] IS NOT NULL AND [CodigoFonteReduzida] IS NOT NULL AND [CodigoGrupo] IS NOT NULL AND [NomeDetalhamento] IS NOT NULL AND [NomeFonteReduzida] IS NOT NULL AND [NomeGrupo] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoFonteERecursoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFonteERecursoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(15)")
											.HasMaxLength(15)
											.IsUnicode(true);

						b.Property<string>("CodigoDetalhamento")
											.HasColumnType("nvarchar(7)")
											.HasMaxLength(7)
											.IsUnicode(true);

						b.Property<string>("CodigoFonteReduzida")
											.HasColumnType("nvarchar(7)")
											.HasMaxLength(7)
											.IsUnicode(true);

						b.Property<string>("CodigoGrupo")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoUnidadeGestora")
											.IsRequired()
											.HasColumnType("nvarchar(11)")
											.HasMaxLength(11)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeDetalhamento")
											.HasColumnType("nvarchar(250)")
											.HasMaxLength(250)
											.IsUnicode(true);

						b.Property<string>("NomeFonteReduzida")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeGrupo")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoUnidadeGestora", "CodigoDetalhamento", "CodigoFonteReduzida", "CodigoGrupo", "NomeDetalhamento", "NomeFonteReduzida", "NomeGrupo")
											.IsUnique()
											.HasFilter("[CodigoDetalhamento] IS NOT NULL AND [CodigoFonteReduzida] IS NOT NULL AND [CodigoGrupo] IS NOT NULL AND [NomeDetalhamento] IS NOT NULL AND [NomeFonteReduzida] IS NOT NULL AND [NomeGrupo] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoFonteERecursoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFuncaoESubFuncaoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(5)")
											.HasMaxLength(5)
											.IsUnicode(true);

						b.Property<string>("CodigoFuncao")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoSubFuncao")
											.HasColumnType("nvarchar(3)")
											.HasMaxLength(3)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeFuncao")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeSubFuncao")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoFuncao", "CodigoSubFuncao", "NomeFuncao", "NomeSubFuncao")
											.IsUnique()
											.HasFilter("[CodigoFuncao] IS NOT NULL AND [CodigoSubFuncao] IS NOT NULL AND [NomeFuncao] IS NOT NULL AND [NomeSubFuncao] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoFuncaoESubFuncaoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFuncaoESubFuncaoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(5)")
											.HasMaxLength(5)
											.IsUnicode(true);

						b.Property<string>("CodigoFuncao")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoSubFuncao")
											.HasColumnType("nvarchar(3)")
											.HasMaxLength(3)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeFuncao")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeSubFuncao")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoFuncao", "CodigoSubFuncao", "NomeFuncao", "NomeSubFuncao")
											.IsUnique()
											.HasFilter("[CodigoFuncao] IS NOT NULL AND [CodigoSubFuncao] IS NOT NULL AND [NomeFuncao] IS NOT NULL AND [NomeSubFuncao] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoFuncaoESubFuncaoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoOrgaoEUnidadeOrcamentariaMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(12)")
											.HasMaxLength(12)
											.IsUnicode(true);

						b.Property<string>("CodigoOrgao")
											.HasColumnType("nvarchar(6)")
											.HasMaxLength(6)
											.IsUnicode(true);

						b.Property<string>("CodigoUnidadeGestora")
											.IsRequired()
											.HasColumnType("nvarchar(11)")
											.HasMaxLength(11)
											.IsUnicode(true);

						b.Property<string>("CodigoUnidadeOrcamentaria")
											.HasColumnType("nvarchar(6)")
											.HasMaxLength(6)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeOrgao")
											.HasColumnType("nvarchar(60)")
											.HasMaxLength(60)
											.IsUnicode(true);

						b.Property<string>("NomeUnidadeOrcamentaria")
											.HasColumnType("nvarchar(60)")
											.HasMaxLength(60)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoOrgao", "CodigoUnidadeGestora", "CodigoUnidadeOrcamentaria", "NomeOrgao", "NomeUnidadeOrcamentaria")
											.IsUnique()
											.HasFilter("[CodigoOrgao] IS NOT NULL AND [CodigoUnidadeOrcamentaria] IS NOT NULL AND [NomeOrgao] IS NOT NULL AND [NomeUnidadeOrcamentaria] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoOrgaoEUnidadeOrcamentariaMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoProgramaEAcaoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoAcao")
											.HasColumnType("nvarchar(5)")
											.HasMaxLength(5)
											.IsUnicode(true);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(9)")
											.HasMaxLength(9)
											.IsUnicode(true);

						b.Property<string>("CodigoPrograma")
											.HasColumnType("nvarchar(4)")
											.HasMaxLength(4)
											.IsUnicode(true);

						b.Property<string>("CodigoUnidadeGestora")
											.IsRequired()
											.HasColumnType("nvarchar(11)")
											.HasMaxLength(11)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeAcao")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomePrograma")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoUnidadeGestora", "CodigoAcao", "CodigoPrograma", "NomeAcao", "NomePrograma")
											.IsUnique()
											.HasFilter("[CodigoAcao] IS NOT NULL AND [CodigoPrograma] IS NOT NULL AND [NomeAcao] IS NOT NULL AND [NomePrograma] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoProgramaEAcaoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoProgramaEAcaoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoAcao")
											.HasColumnType("nvarchar(5)")
											.HasMaxLength(5)
											.IsUnicode(true);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(9)")
											.HasMaxLength(9)
											.IsUnicode(true);

						b.Property<string>("CodigoPrograma")
											.HasColumnType("nvarchar(4)")
											.HasMaxLength(4)
											.IsUnicode(true);

						b.Property<string>("CodigoUnidadeGestora")
											.IsRequired()
											.HasColumnType("nvarchar(11)")
											.HasMaxLength(11)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeAcao")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomePrograma")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoUnidadeGestora", "CodigoAcao", "CodigoPrograma", "NomeAcao", "NomePrograma")
											.IsUnique()
											.HasFilter("[CodigoAcao] IS NOT NULL AND [CodigoPrograma] IS NOT NULL AND [NomeAcao] IS NOT NULL AND [NomePrograma] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoProgramaEAcaoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoReceitaDotacaoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoAlinea")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<string>("CodigoCategoria")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(8)")
											.HasMaxLength(8)
											.IsUnicode(true);

						b.Property<string>("CodigoEspecie")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoOrigem")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoRubrica")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeAlinea")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeCategoria")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeEspecie")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeOrigem")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeRubrica")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("CodigoAlinea", "CodigoCategoria", "CodigoEspecie", "CodigoOrigem", "CodigoRubrica", "NomeAlinea", "NomeCategoria", "NomeOrigem", "NomeRubrica")
											.IsUnique()
											.HasFilter("[CodigoAlinea] IS NOT NULL AND [CodigoCategoria] IS NOT NULL AND [CodigoEspecie] IS NOT NULL AND [CodigoOrigem] IS NOT NULL AND [CodigoRubrica] IS NOT NULL AND [NomeAlinea] IS NOT NULL AND [NomeCategoria] IS NOT NULL AND [NomeOrigem] IS NOT NULL AND [NomeRubrica] IS NOT NULL");

						b.ToTable("DIM_ClassificacaoReceitaDotacaoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoReceitaDotacaoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("CodigoAlinea")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true)
											.HasDefaultValue("--");

						b.Property<string>("CodigoCategoria")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoCompleto")
											.HasColumnType("nvarchar(13)")
											.HasMaxLength(13)
											.IsUnicode(true);

						b.Property<string>("CodigoDetalhamentoNivel1")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true)
											.HasDefaultValue("-");

						b.Property<string>("CodigoDetalhamentoNivel2")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true)
											.HasDefaultValue("--");

						b.Property<string>("CodigoDetalhamentoNivel3")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true)
											.HasDefaultValue("-");

						b.Property<string>("CodigoEspecie")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoOrigem")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoRubrica")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true)
											.HasDefaultValue("-");

						b.Property<string>("CodigoSubAlinea")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true)
											.HasDefaultValue("--");

						b.Property<string>("CodigoTipoDetalhamento")
											.ValueGeneratedOnAdd()
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true)
											.HasDefaultValue("-");

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("NomeAlinea")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeCategoria")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeDetalhamentoNivel1")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeDetalhamentoNivel2")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeDetalhamentoNivel3")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeEspecie")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeOrigem")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeRubrica")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeSubAlinea")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeTipoDetalhamento")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.ToTable("DIM_ClassificacaoReceitaDotacaoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_EsferaAdministrativa", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("Codigo")
											.IsRequired()
											.HasColumnType("nvarchar(3)")
											.HasMaxLength(3)
											.IsUnicode(true);

						b.Property<long?>("CodigoIBGE")
											.HasColumnType("bigint");

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("Nome")
											.IsRequired()
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("Codigo")
											.IsUnique();

						b.ToTable("DIM_EsferaAdministrativa");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_Periodo", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("Codigo")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("Nome")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("Codigo", "Nome")
											.IsUnique();

						b.ToTable("DIM_Periodo");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_Tempo", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("AbreviacaoMes")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<short>("Ano")
											.HasColumnType("smallint");

						b.Property<short>("Bimestre")
											.HasColumnType("smallint");

						b.Property<DateTime>("Data")
											.HasColumnType("datetime2");

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<short>("Mes")
											.HasColumnType("smallint");

						b.Property<string>("NomeBimestre")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<string>("NomeMes")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<string>("NomeQuadrimestre")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<string>("NomeSemestre")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<string>("NomeTrimestre")
											.IsRequired()
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<short>("Quadrimestre")
											.HasColumnType("smallint");

						b.Property<short>("Semestre")
											.HasColumnType("smallint");

						b.Property<short>("Trimestre")
											.HasColumnType("smallint");

						b.HasKey("Id");

						b.HasIndex("Ano", "Mes")
											.IsUnique();

						b.ToTable("DIM_Tempo");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.DIM_UnidadeGestora", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("Codigo")
											.IsRequired()
											.HasColumnType("nvarchar(11)")
											.HasMaxLength(11)
											.IsUnicode(true);

						b.Property<string>("CodigoOriginal")
											.HasColumnType("nvarchar(20)")
											.HasMaxLength(20)
											.IsUnicode(true);

						b.Property<string>("CodigoPoder")
											.HasColumnType("nvarchar(1)")
											.HasMaxLength(1)
											.IsUnicode(true);

						b.Property<string>("CodigoTipoUnidadeGestora")
											.HasColumnType("nvarchar(2)")
											.HasMaxLength(2)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("Nome")
											.IsRequired()
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomePoder")
											.HasColumnType("nvarchar(200)")
											.HasMaxLength(200)
											.IsUnicode(true);

						b.Property<string>("NomeTipoUnidadeGestora")
											.HasColumnType("nvarchar(100)")
											.HasMaxLength(100)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("Codigo", "CodigoOriginal", "Nome", "NomePoder", "CodigoTipoUnidadeGestora", "NomeTipoUnidadeGestora")
											.IsUnique()
											.HasFilter("[CodigoOriginal] IS NOT NULL AND [NomePoder] IS NOT NULL AND [CodigoTipoUnidadeGestora] IS NOT NULL AND [NomeTipoUnidadeGestora] IS NOT NULL");

						b.ToTable("DIM_UnidadeGestora");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_DespesaDotacaoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<decimal?>("Empenhada")
											.HasColumnType("decimal(20,2)");

						b.Property<long>("IdClassificacaoFonteRecurso")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoFuncional")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoNatureza")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoPrograma")
											.HasColumnType("bigint");

						b.Property<long>("IdEsferaAdministrativa")
											.HasColumnType("bigint");

						b.Property<long>("IdSeedHistory")
											.HasColumnType("bigint");

						b.Property<long>("IdTempo")
											.HasColumnType("bigint");

						b.Property<long>("IdUnidadeGestora")
											.HasColumnType("bigint");

						b.Property<decimal?>("InscritasEmRestosAPagar")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("Liquidada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("Paga")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PagaDoExercicio")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoAtualizada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoInicial")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("RestosAPagarNaoProcessadosPagos")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("RestosAPagarProcessadosPagos")
											.HasColumnType("decimal(20,2)");

						b.HasKey("Id");

						b.HasIndex("IdClassificacaoFonteRecurso");

						b.HasIndex("IdClassificacaoFuncional");

						b.HasIndex("IdClassificacaoNatureza");

						b.HasIndex("IdClassificacaoPrograma");

						b.HasIndex("IdEsferaAdministrativa");

						b.HasIndex("IdSeedHistory");

						b.HasIndex("IdTempo");

						b.HasIndex("IdUnidadeGestora");

						b.ToTable("FT_DespesaDotacaoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_DespesaDotacaoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<decimal?>("Empenhada")
											.HasColumnType("decimal(20,2)");

						b.Property<long>("IdClassificacaoFonteRecurso")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoFuncional")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoNatureza")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoOrcamentaria")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoPrograma")
											.HasColumnType("bigint");

						b.Property<long>("IdEsferaAdministrativa")
											.HasColumnType("bigint");

						b.Property<long>("IdOriginal")
											.HasColumnType("bigint");

						b.Property<long>("IdPeriodo")
											.HasColumnType("bigint");

						b.Property<long>("IdSeedHistory")
											.HasColumnType("bigint");

						b.Property<long>("IdTempo")
											.HasColumnType("bigint");

						b.Property<long>("IdUnidadeGestora")
											.HasColumnType("bigint");

						b.Property<decimal?>("Liquidada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("Paga")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoAtualizada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoInicial")
											.HasColumnType("decimal(20,2)");

						b.HasKey("Id");

						b.HasIndex("IdClassificacaoFonteRecurso");

						b.HasIndex("IdClassificacaoFuncional");

						b.HasIndex("IdClassificacaoNatureza");

						b.HasIndex("IdClassificacaoOrcamentaria");

						b.HasIndex("IdClassificacaoPrograma");

						b.HasIndex("IdEsferaAdministrativa");

						b.HasIndex("IdOriginal")
											.IsUnique();

						b.HasIndex("IdPeriodo");

						b.HasIndex("IdSeedHistory");

						b.HasIndex("IdTempo");

						b.HasIndex("IdUnidadeGestora");

						b.ToTable("FT_DespesaDotacaoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_PrestacaoContaMensal", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<DateTime?>("DataHomologacao")
											.HasColumnType("datetime2");

						b.Property<DateTime>("DataLimite")
											.HasColumnType("datetime2");

						b.Property<bool>("EmAtraso")
											.ValueGeneratedOnAddOrUpdate()
											.HasColumnType("bit")
											.HasComputedColumnSql("CASE WHEN DataHomologacao is not null and DataHomologacao > DataLimite THEN CONVERT(bit, 1) ELSE CONVERT(bit, 0) END");

						b.Property<bool>("EmDia")
											.ValueGeneratedOnAddOrUpdate()
											.HasColumnType("bit")
											.HasComputedColumnSql("CASE WHEN DataHomologacao is not null and DataHomologacao <= DataLimite THEN CONVERT(bit, 1) ELSE CONVERT(bit, 0) END");

						b.Property<bool>("EmOmissao")
											.ValueGeneratedOnAddOrUpdate()
											.HasColumnType("bit")
											.HasComputedColumnSql("CASE WHEN DataHomologacao is null and getdate() >= DataLimite THEN CONVERT(bit, 1) ELSE CONVERT(bit, 0) END");

						b.Property<bool>("EmTempo")
											.ValueGeneratedOnAddOrUpdate()
											.HasColumnType("bit")
											.HasComputedColumnSql("CASE WHEN DataHomologacao is null and getdate() < DataLimite THEN CONVERT(bit, 1) ELSE CONVERT(bit, 0) END");

						b.Property<long>("IdEsferaAdministrativa")
											.HasColumnType("bigint");

						b.Property<long>("IdPeriodo")
											.HasColumnType("bigint");

						b.Property<long>("IdSeedHistory")
											.HasColumnType("bigint");

						b.Property<long>("IdTempo")
											.HasColumnType("bigint");

						b.Property<long>("IdUnidadeGestora")
											.HasColumnType("bigint");

						b.HasKey("Id");

						b.HasIndex("IdEsferaAdministrativa");

						b.HasIndex("IdPeriodo");

						b.HasIndex("IdSeedHistory");

						b.HasIndex("IdUnidadeGestora");

						b.HasIndex("IdTempo", "IdEsferaAdministrativa", "IdPeriodo", "IdUnidadeGestora")
											.IsUnique();

						b.ToTable("FT_PrestacaoContaMensal");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_ReceitaDotacaoEstado", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<decimal?>("Arrecadada")
											.HasColumnType("decimal(20,2)");

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<long>("IdClassificacaoFonteRecurso")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoNatureza")
											.HasColumnType("bigint");

						b.Property<long>("IdEsferaAdministrativa")
											.HasColumnType("bigint");

						b.Property<long>("IdSeedHistory")
											.HasColumnType("bigint");

						b.Property<long>("IdTempo")
											.HasColumnType("bigint");

						b.Property<long>("IdUnidadeGestora")
											.HasColumnType("bigint");

						b.Property<decimal?>("PrevisaoAtualizada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoInicial")
											.HasColumnType("decimal(20,2)");

						b.HasKey("Id");

						b.HasIndex("IdClassificacaoFonteRecurso");

						b.HasIndex("IdClassificacaoNatureza");

						b.HasIndex("IdEsferaAdministrativa");

						b.HasIndex("IdSeedHistory");

						b.HasIndex("IdTempo");

						b.HasIndex("IdUnidadeGestora");

						b.ToTable("FT_ReceitaDotacaoEstado");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_ReceitaDotacaoMunicipio", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<decimal?>("Arrecadada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("ArrecadadaFUNDEB")
											.HasColumnType("decimal(20,2)");

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<long>("IdClassificacaoFonteRecurso")
											.HasColumnType("bigint");

						b.Property<long>("IdClassificacaoNatureza")
											.HasColumnType("bigint");

						b.Property<long>("IdEsferaAdministrativa")
											.HasColumnType("bigint");

						b.Property<long>("IdOriginal")
											.HasColumnType("bigint");

						b.Property<long>("IdPeriodo")
											.HasColumnType("bigint");

						b.Property<long>("IdSeedHistory")
											.HasColumnType("bigint");

						b.Property<long>("IdTempo")
											.HasColumnType("bigint");

						b.Property<long>("IdUnidadeGestora")
											.HasColumnType("bigint");

						b.Property<decimal?>("PrevisaoAtualizada")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoAtualizadaFUNDEB")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoInicial")
											.HasColumnType("decimal(20,2)");

						b.Property<decimal?>("PrevisaoInicialFUNDEB")
											.HasColumnType("decimal(20,2)");

						b.HasKey("Id");

						b.HasIndex("IdClassificacaoFonteRecurso");

						b.HasIndex("IdClassificacaoNatureza");

						b.HasIndex("IdEsferaAdministrativa");

						b.HasIndex("IdOriginal")
											.IsUnique();

						b.HasIndex("IdPeriodo");

						b.HasIndex("IdSeedHistory");

						b.HasIndex("IdTempo");

						b.HasIndex("IdUnidadeGestora");

						b.ToTable("FT_ReceitaDotacaoMunicipio");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.__SeedHistory", b =>
					{
						b.Property<long>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnType("bigint")
											.HasAnnotation("SqlServer:IdentityIncrement", 1)
											.HasAnnotation("SqlServer:IdentitySeed", 1)
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<string>("Arquivo")
											.IsRequired()
											.HasColumnType("nvarchar(60)")
											.HasMaxLength(60)
											.IsUnicode(true);

						b.Property<DateTime>("DataCriacao")
											.ValueGeneratedOnAdd()
											.HasColumnType("datetime2")
											.HasDefaultValueSql("getdate()");

						b.Property<string>("Hash")
											.IsRequired()
											.HasColumnType("nvarchar(32)")
											.HasMaxLength(32)
											.IsUnicode(true);

						b.HasKey("Id");

						b.HasIndex("Hash")
											.IsUnique();

						b.ToTable("__SeedHistory");
					});

			modelBuilder.Entity("EntityFrameworkCore.MemoryJoin.QueryModelClass", b =>
					{
						b.Property<int>("Id")
											.ValueGeneratedOnAdd()
											.HasColumnName("id")
											.HasColumnType("int")
											.HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

						b.Property<DateTime?>("Date1")
											.HasColumnName("date1")
											.HasColumnType("datetime2");

						b.Property<DateTime?>("Date2")
											.HasColumnName("date2")
											.HasColumnType("datetime2");

						b.Property<DateTime?>("Date3")
											.HasColumnName("date3")
											.HasColumnType("datetime2");

						b.Property<double?>("Double1")
											.HasColumnName("double1")
											.HasColumnType("float");

						b.Property<double?>("Double2")
											.HasColumnName("double2")
											.HasColumnType("float");

						b.Property<double?>("Double3")
											.HasColumnName("double3")
											.HasColumnType("float");

						b.Property<Guid?>("Guid1")
											.HasColumnName("guid1")
											.HasColumnType("uniqueidentifier");

						b.Property<Guid?>("Guid2")
											.HasColumnName("guid2")
											.HasColumnType("uniqueidentifier");

						b.Property<Guid?>("Guid3")
											.HasColumnName("guid3")
											.HasColumnType("uniqueidentifier");

						b.Property<long?>("Long1")
											.HasColumnName("long1")
											.HasColumnType("bigint");

						b.Property<long?>("Long2")
											.HasColumnName("long2")
											.HasColumnType("bigint");

						b.Property<long?>("Long3")
											.HasColumnName("long3")
											.HasColumnType("bigint");

						b.Property<string>("String1")
											.HasColumnName("string1")
											.HasColumnType("nvarchar(max)");

						b.Property<string>("String2")
											.HasColumnName("string2")
											.HasColumnType("nvarchar(max)");

						b.Property<string>("String3")
											.HasColumnName("string3")
											.HasColumnType("nvarchar(max)");

						b.HasKey("Id");

						b.ToTable("__stub_query_data", "__stub");
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_DespesaDotacaoEstado", b =>
					{
						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFonteERecursoEstado", "ClassificacaoFonteRecurso")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoFonteRecurso")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFuncaoESubFuncaoEstado", "ClassificacaoFuncional")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoFuncional")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoDespesaDotacaoEstado", "ClassificacaoNatureza")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoNatureza")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoProgramaEAcaoEstado", "ClassificacaoPrograma")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoPrograma")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_EsferaAdministrativa", "EsferaAdministrativa")
											.WithMany("DespesasDotacaoEstado")
											.HasForeignKey("IdEsferaAdministrativa")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.__SeedHistory", "SeedHistory")
											.WithMany("DespesasDotacaoEstado")
											.HasForeignKey("IdSeedHistory")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Tempo", "Tempo")
											.WithMany("DespesasDotacaoEstado")
											.HasForeignKey("IdTempo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_UnidadeGestora", "UnidadeGestora")
											.WithMany("DespesasDotacaoEstado")
											.HasForeignKey("IdUnidadeGestora")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_DespesaDotacaoMunicipio", b =>
					{
						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFonteERecursoMunicipio", "ClassificacaoFonteRecurso")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoFonteRecurso")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFuncaoESubFuncaoMunicipio", "ClassificacaoFuncional")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoFuncional")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoDespesaDotacaoMunicipio", "ClassificacaoNatureza")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoNatureza")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoOrgaoEUnidadeOrcamentariaMunicipio", "ClassificacaoOrcamentaria")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoOrcamentaria")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoProgramaEAcaoMunicipio", "ClassificacaoPrograma")
											.WithMany("DespesasDotacao")
											.HasForeignKey("IdClassificacaoPrograma")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_EsferaAdministrativa", "EsferaAdministrativa")
											.WithMany("DespesasDotacaoMunicipio")
											.HasForeignKey("IdEsferaAdministrativa")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Periodo", "Periodo")
											.WithMany("DespesasDotacaoMunicipio")
											.HasForeignKey("IdPeriodo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.__SeedHistory", "SeedHistory")
											.WithMany("DespesasDotacaoMunicipio")
											.HasForeignKey("IdSeedHistory")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Tempo", "Tempo")
											.WithMany("DespesasDotacaoMunicipio")
											.HasForeignKey("IdTempo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_UnidadeGestora", "UnidadeGestora")
											.WithMany("DespesasDotacaoMunicipio")
											.HasForeignKey("IdUnidadeGestora")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_PrestacaoContaMensal", b =>
					{
						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_EsferaAdministrativa", "EsferaAdministrativa")
											.WithMany("PrestacoesContasMensais")
											.HasForeignKey("IdEsferaAdministrativa")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Periodo", "Periodo")
											.WithMany("PrestacoesContasMensais")
											.HasForeignKey("IdPeriodo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.__SeedHistory", "SeedHistory")
											.WithMany("PrestacoesContaMensais")
											.HasForeignKey("IdSeedHistory")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Tempo", "Tempo")
											.WithMany("PrestacoesContasMensais")
											.HasForeignKey("IdTempo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_UnidadeGestora", "UnidadeGestora")
											.WithMany("PrestacoesContasMensais")
											.HasForeignKey("IdUnidadeGestora")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_ReceitaDotacaoEstado", b =>
					{
						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFonteERecursoEstado", "ClassificacaoFonteRecurso")
											.WithMany("ReceitasDotacao")
											.HasForeignKey("IdClassificacaoFonteRecurso")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoReceitaDotacaoEstado", "ClassificacaoNatureza")
											.WithMany("ReceitasDotacao")
											.HasForeignKey("IdClassificacaoNatureza")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_EsferaAdministrativa", "EsferaAdministrativa")
											.WithMany("ReceitasDotacaoEstado")
											.HasForeignKey("IdEsferaAdministrativa")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.__SeedHistory", "SeedHistory")
											.WithMany("ReceitasDotacaoEstado")
											.HasForeignKey("IdSeedHistory")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Tempo", "Tempo")
											.WithMany("ReceitasDotacaoEstado")
											.HasForeignKey("IdTempo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_UnidadeGestora", "UnidadeGestora")
											.WithMany("ReceitasDotacaoEstado")
											.HasForeignKey("IdUnidadeGestora")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();
					});

			modelBuilder.Entity("ControleSocial.Domain.Models.DWControleSocial.FT_ReceitaDotacaoMunicipio", b =>
					{
						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoFonteERecursoMunicipio", "ClassificacaoFonteRecurso")
											.WithMany("ReceitasDotacao")
											.HasForeignKey("IdClassificacaoFonteRecurso")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_ClassificacaoReceitaDotacaoMunicipio", "ClassificacaoNatureza")
											.WithMany("ReceitasDotacao")
											.HasForeignKey("IdClassificacaoNatureza")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_EsferaAdministrativa", "EsferaAdministrativa")
											.WithMany("ReceitasDotacaoMunicipio")
											.HasForeignKey("IdEsferaAdministrativa")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Periodo", "Periodo")
											.WithMany("ReceitasDotacaoMunicipio")
											.HasForeignKey("IdPeriodo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.__SeedHistory", "SeedHistory")
											.WithMany("ReceitasDotacaoMunicipio")
											.HasForeignKey("IdSeedHistory")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_Tempo", "Tempo")
											.WithMany("ReceitasDotacaoMunicipio")
											.HasForeignKey("IdTempo")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();

						b.HasOne("ControleSocial.Domain.Models.DWControleSocial.DIM_UnidadeGestora", "UnidadeGestora")
											.WithMany("ReceitasDotacaoMunicipio")
											.HasForeignKey("IdUnidadeGestora")
											.OnDelete(DeleteBehavior.NoAction)
											.IsRequired();
					});
#pragma warning restore 612, 618
		}
	}
}
